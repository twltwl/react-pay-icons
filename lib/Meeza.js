function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react);
    global.Meeza = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, React) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  React = _interopRequireWildcard(React);

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

  var SvgMeeza = function SvgMeeza(props) {
    return /*#__PURE__*/React.createElement("div", {
      className: props.className,
      style: props.style
    }, /*#__PURE__*/React.createElement("svg", _extends({
      viewBox: "0 0 60 40",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, props), /*#__PURE__*/React.createElement("path", {
      fill: "#F3F6F9",
      d: "M0 0h60v40H0z"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M17.15 12.038h-.262c-.948 0-1.922-.027-2.87 0-.211 0-.446.027-.658.051h-.027c-2.788.341-4.683 2.342-4.867 5.239-.133 2.051-.317 4.076-.45 6.131-.21 3.633 1.606 5.58 5.212 5.606h1.578c2.788-.105 5.027-2.236 5.238-5.027.263-3.527.842-12.051.842-12.051l-3.736.05zm-1.053 6.578c-.105 1.605-.184 3.21-.317 4.816-.105 1.288-.34 1.343-2.395 1.315-1.16-.027-1.08-.685-1.026-1.472.132-1.817.262-3.657.316-5.474.028-1.08.474-1.421 1.527-1.394 1.974.024 1.974-.003 1.895 2.209zM46.625 12.038c-2-.051-4.026 0-6.026-.027H39.679l-.052 1.131c-.21 3.657-.5 7.29-.709 10.948-.078 1.394-.368 1.605-1.656.998-.815-.395-1.237-1.08-1.473-1.895-.262-.947-.235-1.895-.157-2.87.157-2 .263-4 .396-6.025.05-.842-.133-1.605-.92-2-.631-.317-1.316-.342-2.001-.317l-1.289.027-.051 1.158c-.235 3.712-.764 7.396-.552 11.105.051.736-.212.92-.79 1.026-2.475.525-4.422-1.265-4.292-4.053.079-2.052.317-4.107.447-6.131.157-2.553-.341-3.027-2.87-3.105H22.334l-.051 1.21v.051c-.422 6.632-.869 13.265-1.394 19.894-.027.29-.051.501-.051.685l-.027.685H22.757c1.683-.027 2.396-.658 2.58-2.29.105-1.053.184-2.08.262-3.21 2.342.868 4.475.578 6.343-1.081.368-.317.525-.211.842.051 1.84 1.536 4.122 1.886 6.376 1.123.335-.115.664-.245.977-.41.263-.14.616-.465.908-.212 1.238 1.026 2.71.79 4.131.79 3.344 0 5.552-2.157 5.737-5.5.105-2.13.262-4.264.422-6.421.29-3.048-1.632-5.257-4.71-5.335zm.368 6.578c-.106 1.605-.184 3.21-.317 4.816-.105 1.288-.34 1.343-2.396 1.315-1.159-.027-1.08-.684-1.026-1.472.133-1.817.263-3.657.317-5.474.027-1.08.474-1.421 1.527-1.394 2 .024 2-.003 1.895 2.209z",
      fill: "#4C1C71"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M32.78 30.037c-1.264.157-1.867 1.132-1.789 2.842.052 1.16.685 1.711 1.974 1.739 1.684.027 2.29-.658 2.474-2.894.027-.29.051-.501.051-.71v-.026-.317-.658h-2.395a1.107 1.107 0 00-.314.024zM27.86 30.17c-1.265.157-1.869 1.131-1.79 2.842.051 1.159.685 1.711 1.973 1.738 1.684.027 2.29-.658 2.475-2.893.027-.29.05-.501.05-.71v-.998h-2.395a1.008 1.008 0 00-.314.02zM17.754 10.668c1.684.027 2.29-.658 2.474-2.894.027-.29.051-.5.051-.709v-.027-.317-.658h-2.395c-.106 0-.212 0-.317.028-1.265.156-1.868 1.131-1.79 2.842.058 1.156.688 1.708 1.977 1.735zM12.832 10.8c1.684.028 2.29-.657 2.475-2.893.027-.29.051-.525.051-.71v-.026-.317-.658h-2.396c-.105 0-.211 0-.317.027-1.264.157-1.867 1.132-1.789 2.843.057 1.155.688 1.708 1.976 1.735z",
      fill: "#4C1C71"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M24.594 10.605c1.289-.027 1.923-.58 1.974-1.738.078-1.711-.525-2.686-1.79-2.843C24.674 6 24.569 6 24.463 6h-2.396v1.002c0 .211.027.422.051.709.187 2.236.794 2.92 2.477 2.894zM48.993 30.378h-9.42c-2.052 0-3.238 1.08-3.238 2.894v1.472h.896c3.79 0 7.58 0 11.37-.027 1.105 0 1.711-.763 1.922-1.816.052-.263.079-2.526.079-2.526h-.87c-.213.003-.449.003-.739.003z",
      fill: "#ED7029"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M47.49 9.38h-1.867l2.133-2.318v-.92l-3.762-.027v1.131h1.735l-1.974 2.396v.92h3.736V9.38zM29.809 10.273c.05-.92.235-3 .235-3a.89.89 0 01.142-.015c.111-.009.226-.015.338-.012.108.003.22.006.316.055.016.009.03.015.046.027.157.105.184.317.184.473-.051.842-.184 2.87-.184 2.87h1.394l.157-3.367c.658-.263 1.053.05 1.053.63-.027.79-.106 2.737-.106 2.737h1.343c0-1.083.079-2.185.127-3.27.015-.387-.033-.81-.362-1.063a1.122 1.122 0 00-.498-.205 3.626 3.626 0 00-.866-.04c-.28.019-.562.04-.84.097a2.785 2.785 0 00-.168.042c-.12.034-.241.067-.365.097l-.263-.079a3.194 3.194 0 00-.262-.078c-.317-.106-.975-.106-.975-.106-.422.028-.842.052-1.288.079l-.29.027-.027.341c-.079 1.288-.29 4.158-.29 4.158h1.421l.028-.398zM36.57 10.562c2.237 0 2.237-.105 2.237-.105V9.404h-1.265-.051c-.235 0-.447 0-.685-.027-.238 0-.447-.157-.422-.423l.027-.211h.446c.685.027 1.21.027 1.868.051h.341v-.262c0-.402.006-.812-.04-1.213-.044-.414-.186-.785-.551-1.011-.347-.214-.77-.275-1.168-.272-.528.003-1.105.07-1.557.362-.525.341-.474.92-.552 1.473-.052.368-.052.736-.052 1.104-.024 1.008.426 1.587 1.425 1.587zm.028-3.026a.598.598 0 01.317-.263c.105-.05.235-.05.368-.05s.29.026.422.105a.508.508 0 01.215.29c.039.123.02.24.02.367 0 .028-1.42 0-1.42 0 0-.132 0-.316.078-.45zM40.873 10.562c2.236 0 2.236-.105 2.236-.105V9.404h-1.264-.051c-.235 0-.447 0-.685-.027-.239 0-.447-.157-.423-.423l.028-.211h.446c.685.027 1.21.027 1.868.051h.341v-.262c0-.402.006-.812-.04-1.213-.044-.414-.186-.785-.551-1.011-.347-.214-.77-.275-1.168-.272-.528.003-1.105.07-1.557.362-.525.341-.474.92-.552 1.473-.052.368-.052.736-.052 1.104-.02 1.008.426 1.587 1.425 1.587zm.028-3.026a.598.598 0 01.316-.263c.106-.05.236-.05.369-.05.132 0 .29.026.422.105a.526.526 0 01.217.29c.04.123.021.24.021.367 0 .028-1.42 0-1.42 0-.004-.132-.004-.316.075-.45zM51.86 6.588c-.093-.172-.271-.286-.453-.35l-.072-.024c-.232-.066-.477-.063-.715-.066a30.777 30.777 0 00-.528-.006c-.223 0-.447 0-.67.003-.293.003-.585.012-.875.03-.078.006-.163.006-.241.021v1.105c.28 0 .199.006.295 0 .097-.007.193-.01.293-.013l.622-.027c.108-.006.214-.009.322-.012.097-.003.2-.012.296 0 .036.003.072.006.106.012a.48.48 0 01.362.25c.06.124.045.26.045.393 0 .054-.383.048-.42.048-.183.003-.37 0-.555-.003h-.15c-.17 0-.338.003-.504.012-.254.015-.513.07-.715.233a1.012 1.012 0 00-.317.525c-.133.395-.106.814.051 1.21a.927.927 0 00.29.422c.184.133.422.184.657.211.607.052 1.21.079 1.79.027.317-.027.658-.05.947-.156.027 0 .052-.027.052-.027.027-.028.027-.052.027-.079.051-.975.133-1.922.184-2.894v-.317a1.003 1.003 0 00-.124-.528zm-1.493 2.885a.567.567 0 01-.242.076c-.021.003-.042.003-.063.003a2.835 2.835 0 01-.32-.013c-.097-.009-.2-.012-.284-.057a.384.384 0 01-.202-.344c0-.16.072-.314.223-.38.121-.051.26-.051.39-.057.15-.006.301-.012.455-.01.055 0 .109.007.154.034.088.054.094.163.094.253 0 .187-.043.39-.206.495z",
      fill: "#4C1C71"
    })));
  };

  var _default = SvgMeeza;
  _exports["default"] = _default;
});
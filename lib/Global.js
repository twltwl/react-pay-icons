function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react);
    global.Global = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, React) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  React = _interopRequireWildcard(React);

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

  var SvgGlobal = function SvgGlobal(props) {
    return /*#__PURE__*/React.createElement("div", {
      className: props.className,
      style: props.style
    }, /*#__PURE__*/React.createElement("svg", _extends({
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 126 79"
    }, props), /*#__PURE__*/React.createElement("g", {
      fill: "none",
      fillRule: "evenodd"
    }, /*#__PURE__*/React.createElement("rect", {
      fill: "#F1F2F2",
      fillRule: "nonzero",
      width: 125.43,
      height: 78.39,
      rx: 4.18
    }), /*#__PURE__*/React.createElement("path", {
      d: "M7.002 42.066c.051-1.621 2.051-3.598 5.026-5.169 1.95 2.635 5.13 4.307 8.669 4.307.512 0 1.026-.05 1.538-.1-1.692 1.064-3.795 2.077-6.103 2.685-5.13 1.42-9.233.66-9.13-1.723m8.463-13.735c-.052 1.622 2.667 2.332 6.104 1.622 3.436-.76 6.257-2.686 6.308-4.308.052-1.621-2.667-2.331-6.103-1.57-3.437.76-6.258 2.685-6.309 4.256zm-5.642 2.13c0-5.88 4.873-10.695 10.874-10.695 6 0 10.822 4.815 10.822 10.694 0 5.423-4.052 9.883-9.284 10.644 2-1.369 3.283-2.89 3.334-4.207.103-2.331-4-3.143-9.13-1.723a24.798 24.798 0 00-4.41 1.723 10.41 10.41 0 01-2.206-6.437zM28.75 18.803c0-.76 1.384-1.57 2.975-1.774 1.64-.152 2.923.304 2.872 1.065 0 .76-1.334 1.57-2.975 1.723-1.642.203-2.924-.253-2.873-1.014M8.489 56.359c.206-3.295 5.694-7.805 12.361-10.188 6.617-2.33 11.849-1.57 11.695 1.673C32.34 51.139 26.8 55.7 20.184 58.03c-6.617 2.332-11.849 1.622-11.695-1.672",
      fill: "#1B926B"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M37.418 40.85c-.719.254-1.077.558-1.077 1.115 0 .912.872 1.47 2.513 1.47 1.846 0 2.82-.659 2.82-1.825 0-1.115-.666-1.419-2.205-1.52-.974-.101-1.538-.05-1.538-.457 0-.152.102-.304.358-.405.206.05.411.101.668.101 1.385 0 2.205-.76 2.205-1.875 0-.456-.103-.81-.257-1.064a.877.877 0 01.513-.152c.103 0 .154.05.257.05v-1.064h-.205c-.41 0-.77.203-1.077.557a2.575 2.575 0 00-1.488-.455c-1.333 0-2.257.81-2.257 2.027 0 .659.308 1.216.872 1.52-.616.304-.923.71-.923 1.116 0 .405.256.608.82.86zm.564-3.497c0-.608.41-.963.923-.963.615 0 1.026.355 1.026.963 0 .557-.41.912-.974.912-.616 0-.975-.355-.975-.912zm.307 3.801l1.334.05c.513.052.77.153.77.508 0 .405-.565.709-1.54.709-.718 0-1.127-.253-1.127-.659 0-.253.153-.405.563-.608zm4.821.152h1.386v-8.16H43.11zm3.027-2.94c0 1.926.975 3.042 2.513 3.042 1.59 0 2.565-1.116 2.565-3.042 0-1.925-.974-3.04-2.565-3.04-1.538 0-2.513 1.115-2.513 3.04zm1.437 0c0-1.266.359-1.875 1.076-1.875.77 0 1.13.609 1.13 1.875 0 1.217-.36 1.825-1.13 1.825-.717 0-1.076-.608-1.076-1.825zm5.18 2.94h1.077l.154-.659c.513.507.975.76 1.641.76 1.334 0 2.308-1.216 2.308-3.04 0-1.876-1.026-3.041-2.308-3.041-.564 0-1.026.202-1.436.659v-2.839h-1.385v6.792c0 .253 0 .71-.05 1.368zm1.436-1.571v-2.788c.359-.304.667-.506 1.077-.506.77 0 1.231.709 1.231 1.925 0 1.217-.462 1.876-1.23 1.876-.411 0-.719-.152-1.078-.507zm8.463 1.571h1.334c-.052-.355-.103-.608-.103-.81v-3.447c0-1.064-.77-1.723-2.154-1.723-1.026 0-1.796.355-2.308 1.115l.974.608c.308-.456.77-.66 1.283-.66.564 0 .871.254.871.66v.456c-2.308.304-3.384.963-3.384 2.28 0 .963.614 1.572 1.59 1.572.614 0 1.23-.203 1.743-.609l.154.558zm-.154-2.888v1.267c-.461.405-.872.607-1.334.607-.41 0-.615-.202-.615-.607 0-.71.615-1.065 1.95-1.267zm3.385 2.888h1.436v-8.16h-1.436zm3.642 2.129h.718v-2.89h.052c.564.559 1.128.863 1.795.863 1.282 0 2.154-1.116 2.154-3.042 0-1.925-.872-3.04-2.154-3.04-.667 0-1.231.303-1.795.861h-.052l-.205-.76h-.513v8.008zm.718-6.437c.565-.71 1.128-1.064 1.796-1.064.974 0 1.539.81 1.539 2.432 0 1.623-.565 2.484-1.54 2.484-.667 0-1.23-.405-1.795-1.115v-2.737zm9.028 2.787c-.668.71-1.283 1.065-1.898 1.065-.616 0-1.026-.405-1.026-1.065 0-.962.923-1.367 2.924-1.773v1.773zm.102 1.521h.718c-.05-.406-.103-.659-.103-.81v-3.65c0-.861-.769-1.52-1.897-1.52-1.026 0-1.641.405-2.103 1.216l.513.304c.36-.608.82-.912 1.487-.912.821 0 1.283.355 1.283.912v.608c-2.462.406-3.59 1.014-3.59 2.383 0 .911.615 1.57 1.59 1.57.717 0 1.384-.303 2-.912 0 .253.05.507.102.811zm4.258-.05c-.257 1.114-.616 1.57-1.488 1.57-.154 0-.308 0-.513-.05v.557c.256.05.462.05.616.05 1.025 0 1.487-.455 1.897-1.62l2.257-6.336h-.667l-1.744 4.967-1.743-4.967h-.719l2.104 5.829m4.411.05h.666V37.05c.616-.76 1.18-1.115 1.744-1.115.82 0 .974.507.974 1.52v3.852h.719V37.05c.564-.76 1.128-1.115 1.693-1.115.82 0 1.025.507 1.025 1.52v3.852h.667v-4.105c0-1.216-.513-1.875-1.487-1.875-.667 0-1.283.355-1.898 1.013h-.103c-.256-.658-.718-1.013-1.385-1.013s-1.282.355-1.898 1.013h-.05v-.912h-.667v5.88m13.489-1.725c-.461.862-.923 1.267-1.692 1.267-1.129 0-1.744-.861-1.744-2.484h3.898v-.202c0-1.875-.77-2.838-2.206-2.838s-2.41 1.165-2.41 3.092c0 1.824.974 2.99 2.41 2.99 1.078 0 1.744-.457 2.257-1.52l-.513-.305zm-.205-1.723h-3.231c.102-1.267.77-1.977 1.692-1.977.924 0 1.539.71 1.539 1.977zm2.513 3.446h.718V37.05c.616-.76 1.282-1.115 1.847-1.115.923 0 1.128.507 1.128 1.52v3.852h.667v-4.105c0-1.216-.513-1.875-1.59-1.875-.667 0-1.333.355-2.052 1.013v-.912h-.718v5.88m7.54-1.117v-4.206h1.23v-.558h-1.23v-1.723h-.667v1.723h-.872v.558h.872v4.155c0 .862.36 1.268 1.18 1.268.257 0 .513-.051.77-.102v-.558c-.257.051-.462.102-.616.102-.462 0-.667-.203-.667-.659m2.719-.354l-.513.405c.615.76 1.282 1.166 2.256 1.166 1.18 0 2.001-.71 2.001-1.723 0-.913-.616-1.267-1.796-1.673-.974-.406-1.538-.558-1.538-1.166 0-.557.41-.963 1.026-.963.666 0 1.18.304 1.64.862l.462-.355c-.512-.71-1.179-1.064-1.948-1.064-1.18 0-1.898.659-1.898 1.571 0 .861.615 1.216 1.795 1.672.975.355 1.539.507 1.539 1.216 0 .609-.513 1.065-1.231 1.065-.667 0-1.283-.355-1.795-1.013",
      fill: "#005A87"
    }))));
  };

  var _default = SvgGlobal;
  _exports["default"] = _default;
});
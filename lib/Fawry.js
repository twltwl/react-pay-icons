function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(["exports", "react"], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require("react"));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.react);
    global.Fawry = mod.exports;
  }
})(typeof globalThis !== "undefined" ? globalThis : typeof self !== "undefined" ? self : this, function (_exports, React) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports["default"] = void 0;
  React = _interopRequireWildcard(React);

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

  var SvgFawry = function SvgFawry(props) {
    return /*#__PURE__*/React.createElement("div", {
      className: props.className,
      style: props.style
    }, /*#__PURE__*/React.createElement("svg", _extends({
      viewBox: "0 0 60 40",
      fill: "none",
      xmlns: "http://www.w3.org/2000/svg"
    }, props), /*#__PURE__*/React.createElement("rect", {
      width: 60,
      height: 40,
      fill: "#FFD228"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M35.5647 20.8C35.6864 20.4016 35.7971 20.0031 35.9188 19.5937C36.0737 19.0735 36.2176 18.5644 36.3726 18.0443C36.4832 17.6791 36.6714 17.5352 37.0476 17.5352C37.3132 17.5352 37.5788 17.5352 37.8445 17.5352C38.1875 17.5352 38.3867 17.6791 38.4863 18.0111C38.7409 18.8522 38.9843 19.7043 39.2278 20.5454C39.2499 20.6229 39.2832 20.7114 39.3385 20.7889C39.3828 20.6561 39.427 20.5344 39.4602 20.4016C39.6816 19.649 39.9029 18.8854 40.1353 18.1328C40.2681 17.6902 40.4894 17.5242 40.9432 17.5242C41.2309 17.5242 41.5187 17.5242 41.7953 17.5242C42.0388 17.5242 42.1384 17.6348 42.0831 17.8672C42.0056 18.166 41.906 18.4648 41.8064 18.7526C41.3748 20.1027 40.9321 21.464 40.5005 22.8141C40.3788 23.1793 40.1464 23.3343 39.7701 23.3453C39.5598 23.3453 39.3496 23.3453 39.1393 23.3453C38.763 23.3453 38.5195 23.1683 38.4089 22.8141C38.1101 21.8513 37.8002 20.8885 37.5014 19.9257C37.4903 19.8703 37.4682 19.8261 37.435 19.7265C37.4018 19.815 37.3907 19.8593 37.3686 19.9035C37.0587 20.8664 36.7599 21.8402 36.45 22.8031C36.3394 23.1683 36.0959 23.3343 35.7085 23.3343C35.4872 23.3343 35.2769 23.3343 35.0556 23.3343C34.7015 23.3343 34.469 23.1572 34.3584 22.8252C33.8825 21.3533 33.4177 19.8925 32.9418 18.4206C32.8975 18.2656 32.8422 18.1218 32.7979 17.9668C32.7758 17.8894 32.7647 17.8119 32.7647 17.7344C32.7647 17.5795 32.8422 17.502 32.9861 17.502C33.3402 17.502 33.6833 17.491 34.0374 17.502C34.3584 17.5131 34.5908 17.7012 34.6904 18.0111C34.9449 18.8743 35.1995 19.7375 35.4651 20.6008C35.4761 20.6561 35.4983 20.7004 35.5093 20.7557",
      fill: "#006D95"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M29.5221 20.966C29.2565 20.977 28.9798 20.966 28.7142 20.977C28.4486 20.9881 28.2273 21.1098 28.1055 21.3644C27.9285 21.7406 28.1498 22.1501 28.5814 22.2387C29.2344 22.3715 29.8209 22.1612 30.3743 21.8292C30.4075 21.807 30.4296 21.7406 30.4296 21.6964C30.4407 21.5082 30.4296 21.309 30.4296 21.1209C30.4296 21.0102 30.3853 20.977 30.2857 20.977C30.0423 20.966 29.7877 20.966 29.5221 20.966ZM30.5845 22.9027C30.496 22.958 30.4185 23.0023 30.3411 23.0465C29.7877 23.3896 29.168 23.5003 28.5261 23.4781C28.1055 23.456 27.7071 23.3896 27.3198 23.2125C26.6226 22.8916 26.2352 22.294 26.2574 21.5857C26.2795 20.7889 26.689 20.2687 27.4194 19.981C27.8067 19.8261 28.2162 19.7597 28.6368 19.7597C29.179 19.7597 29.7324 19.7597 30.2747 19.7597C30.4185 19.7597 30.4517 19.7154 30.4407 19.5826C30.3632 18.9075 30.0865 18.6419 29.4004 18.6419C29.1237 18.6419 28.8581 18.6751 28.6146 18.8079C28.5261 18.8632 28.4376 18.9296 28.3601 19.0071C28.1941 19.1953 27.9949 19.2838 27.7514 19.2838C27.519 19.2838 27.2866 19.2838 27.0542 19.2838C26.7775 19.2838 26.6558 19.1399 26.6779 18.8632C26.7222 18.321 27.0099 17.9668 27.4969 17.7455C27.8953 17.5684 28.3158 17.502 28.7474 17.4577C29.345 17.4135 29.9426 17.3913 30.5292 17.5463C31.1711 17.7012 31.6912 18.0222 32.0011 18.6308C32.1671 18.9628 32.2335 19.3059 32.2335 19.6711C32.2335 20.7778 32.2335 21.8845 32.2335 23.0023C32.2335 23.2679 32.1228 23.3675 31.8683 23.3675C31.5806 23.3675 31.2928 23.3675 31.0051 23.3675C30.7173 23.3675 30.6177 23.2789 30.6067 22.9801C30.5956 22.9691 30.5956 22.9469 30.5845 22.9027Z",
      fill: "#006D95"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M50.8038 22.9248C50.6267 22.9027 50.4718 22.8916 50.3279 22.8584C49.8299 22.7699 49.4315 22.5153 49.1216 22.1169C48.7785 21.6743 48.5682 21.1762 48.4022 20.6561C48.1145 19.7375 47.8378 18.819 47.5722 17.9004C47.5058 17.6791 47.6054 17.5463 47.8378 17.5463C48.1698 17.5463 48.5129 17.5463 48.8449 17.5463C49.1105 17.5463 49.2876 17.6791 49.3651 17.9447C49.6196 18.7637 49.8631 19.5826 50.1176 20.4016C50.2172 20.7336 50.35 21.0545 50.5714 21.3312C50.6931 21.475 50.837 21.5857 51.0251 21.6189C51.1358 21.6411 51.1911 21.6189 51.2243 21.4972C51.5231 20.4126 51.8219 19.3281 52.1207 18.2435C52.1539 18.1328 52.1871 18.0111 52.2203 17.9004C52.2867 17.668 52.4527 17.5463 52.6962 17.5463C53.0282 17.5463 53.3602 17.5463 53.6922 17.5463C53.9468 17.5463 54.0464 17.6791 53.98 17.9115C53.5041 19.6379 53.0393 21.3754 52.5523 23.1019C52.4417 23.5003 52.2646 23.8876 52.0654 24.2528C51.7112 24.9279 51.1247 25.2821 50.3611 25.271C49.8963 25.271 49.4315 25.2157 48.9667 25.1603C48.7342 25.1382 48.6346 25.0054 48.6346 24.773C48.6346 24.5959 48.6346 24.4299 48.6346 24.2528C48.6346 24.0426 48.7564 23.9208 48.9667 23.9208C49.188 23.9319 49.4204 23.954 49.6417 23.9872C49.9627 24.0315 50.2394 23.954 50.4496 23.7106C50.6267 23.5003 50.7263 23.2347 50.8038 22.9248Z",
      fill: "#006D95"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M21.8085 20.4458C21.8085 19.6047 21.7863 18.7747 21.8195 17.9336C21.8306 17.6016 21.9081 17.2585 22.0077 16.9376C22.229 16.2736 22.7491 15.9305 23.4021 15.7756C24.1214 15.5985 24.8519 15.6096 25.5823 15.676C25.7704 15.687 25.9586 15.7202 26.1356 15.7534C26.368 15.7977 26.4676 15.9194 26.4676 16.1519C26.4676 16.3179 26.4676 16.4728 26.4676 16.6388C26.4566 16.8712 26.3459 16.9929 26.1024 16.9929C25.9364 16.9929 25.7704 16.9819 25.6044 16.9487C25.1617 16.8601 24.7191 16.8933 24.2874 17.004C23.8669 17.1036 23.6677 17.3581 23.6124 17.8451C23.5902 17.989 23.5902 18.1439 23.5792 18.2878C23.5681 18.4206 23.6124 18.4648 23.7562 18.4648C24.2985 18.4538 24.8519 18.4648 25.3941 18.4648C25.6819 18.4648 25.7815 18.5644 25.7925 18.8522C25.7925 19.0292 25.7925 19.2063 25.7925 19.3834C25.7925 19.6158 25.6708 19.7375 25.4273 19.7375C24.874 19.7375 24.3096 19.7375 23.7562 19.7375C23.6234 19.7375 23.5792 19.7818 23.5792 19.9146C23.5792 20.9328 23.5792 21.9509 23.5792 22.9801C23.5792 23.29 23.4796 23.3896 23.1697 23.3896C22.8487 23.3896 22.5167 23.3896 22.1958 23.3896C21.897 23.3896 21.7974 23.29 21.7974 22.9912C21.7974 22.128 21.7974 21.2869 21.8085 20.4458Z",
      fill: "#006D95"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M44.6395 18.1882C44.8055 18.0775 44.9273 17.989 45.049 17.9115C45.6245 17.5352 46.2664 17.4246 46.9414 17.4246C47.1406 17.4246 47.2513 17.5463 47.2624 17.7455C47.2734 18.0111 47.2734 18.2878 47.2624 18.5534C47.2513 18.7637 47.1406 18.8743 46.9304 18.8743C46.6869 18.8743 46.4324 18.8743 46.1889 18.8522C45.7019 18.8079 45.3035 18.985 44.9383 19.3059C44.717 19.5051 44.6174 19.7154 44.6285 20.0253C44.6506 20.9992 44.6395 21.9731 44.6395 22.958C44.6395 23.2679 44.5399 23.3675 44.219 23.3675C43.8759 23.3675 43.5439 23.3675 43.2008 23.3675C42.9684 23.3675 42.8467 23.2458 42.8467 23.0134C42.8467 21.309 42.8467 19.6047 42.8467 17.9004C42.8467 17.668 42.9684 17.5463 43.2008 17.5463C43.566 17.5463 43.9312 17.5463 44.2964 17.5463C44.5178 17.5463 44.6285 17.668 44.6395 17.8894C44.6395 17.9668 44.6395 18.0664 44.6395 18.1882Z",
      fill: "#006D95"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M19.0307 20.4015C19.0307 24.2196 15.943 27.3073 12.1249 27.3073C11.3945 27.3073 10.6973 27.1966 10.0444 26.9864C9.0594 26.6765 8.16298 26.1453 7.42149 25.4481C6.06026 24.1864 5.21918 22.3936 5.21918 20.4015C5.21918 16.5835 8.30685 13.4958 12.1249 13.4958C12.9439 13.4958 13.7407 13.6397 14.4711 13.9053C15.4229 14.2483 16.2861 14.8017 16.9833 15.4989C18.2449 16.7495 19.0307 18.487 19.0307 20.4015Z",
      fill: "white"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M15.3233 23.3343L14.3937 22.8694C14.3937 22.8694 12.8111 25.7579 10.0333 26.9863C9.04833 26.6765 8.15191 26.1453 7.41043 25.448C8.01911 25.3595 9.00407 25.0496 10.0333 24.0315C11.7265 22.3714 12.1139 21.4529 12.1139 21.4529L11.3835 20.9659C11.14 20.7999 11.1842 20.4237 11.4609 20.3241L14.6482 19.2174C14.8695 19.1399 15.1019 19.2838 15.1241 19.5162L15.6221 23.124C15.6442 23.29 15.4782 23.4007 15.3233 23.3343Z",
      fill: "#006D95"
    }), /*#__PURE__*/React.createElement("path", {
      d: "M16.2861 19.3391C16.2086 19.5383 15.9209 19.5051 15.8877 19.2948L15.6774 18.0664L14.1059 18.5534C13.9288 18.6087 13.7739 18.4316 13.8513 18.2656C14.0616 17.8229 14.3604 17.0815 14.6039 16.1186C14.8252 15.2112 14.6703 14.4143 14.4822 13.8942C15.4339 14.2373 16.2971 14.7906 16.9943 15.4878C17.1161 16.9487 16.6181 18.487 16.2861 19.3391Z",
      fill: "#006D95"
    })));
  };

  var _default = SvgFawry;
  _exports["default"] = _default;
});